{"ast":null,"code":"var _jsxFileName = \"/home/files/javascript/react/reactjs/tp/perle/src/components/clients/authentification/layouts/monDomicile/layouts/inputAuto/InputAuto.jsx\";\n// /* eslint-disable no-use-before-define */\n// import React from 'react'\n// import TextField from '@material-ui/core/TextField'\n// import Grid from '@material-ui/core/Grid'\n// import Autocomplete from '@material-ui/lab/Autocomplete'\n//\n// function InputAuto ({ Datas, Icon, Key, Label, Event, Name }) {\n//     return (\n//         <div style={{ width: 300 }}>\n//             <Autocomplete\n//                 freeSolo\n//                 onChange={(event, newValue) => newValue && Event(newValue)}\n//                 onSelect={(event) => event && Event(event)}\n//                 id=\"free-solo-2-demo\"\n//                 disableClearable\n//                 options={Datas && Datas.map((option) => option[Key])}\n//                 renderInput={(params) => (\n//                     <Grid container spacing={1} alignItems=\"flex-end\">\n//                         <Grid item>\n//                             <Icon />\n//                         </Grid>\n//                         <Grid item>\n//                             <TextField\n//                                 {...params}\n//                                 label={Label}\n//                                 error={false}\n//                                 // value={ville}\n//                                 // className=\"max-width\"\n//                                 name={Name}\n//                                 style={{ width: 215 }}\n//                                 InputProps={{ ...params.InputProps, type: 'search' }}\n//                             />\n//                         </Grid>\n//                     </Grid>\n//                 )}\n//             />\n//         </div>\n//     )\n// }\n//\n// export default InputAuto\n// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'axios';\n\nfunction sleep(delay = 0) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function Asynchronous() {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const response = await axios.get('https://country.register.gov.uk/records.json?page-size=5000');\n      await sleep(1e3); // For demo purposes.\n\n      const countries = await response.data;\n\n      if (active) {\n        setOptions(Object.keys(countries).map(key => countries[key].item[0]));\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"asynchronous-demo\",\n    style: {\n      width: 300\n    },\n    open: open,\n    onOpen: () => {\n      setOpen(true);\n    },\n    onClose: () => {\n      setOpen(false);\n    },\n    getOptionSelected: (option, value) => option.name === value.name,\n    getOptionLabel: option => option.name,\n    options: options,\n    loading: loading,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Asynchronous\",\n      InputProps: { ...params.InputProps,\n        endAdornment: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }\n        }, loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n          color: \"inherit\",\n          size: 20,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 44\n          }\n        }) : null, params.InputProps.endAdornment)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/files/javascript/react/reactjs/tp/perle/src/components/clients/authentification/layouts/monDomicile/layouts/inputAuto/InputAuto.jsx"],"names":["React","TextField","Autocomplete","CircularProgress","axios","sleep","delay","Promise","resolve","setTimeout","Asynchronous","open","setOpen","useState","options","setOptions","loading","length","useEffect","active","undefined","response","get","countries","data","Object","keys","map","key","item","width","option","value","name","params","InputProps","endAdornment"],"mappings":"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","sourcesContent":["// /* eslint-disable no-use-before-define */\n// import React from 'react'\n// import TextField from '@material-ui/core/TextField'\n// import Grid from '@material-ui/core/Grid'\n// import Autocomplete from '@material-ui/lab/Autocomplete'\n//\n// function InputAuto ({ Datas, Icon, Key, Label, Event, Name }) {\n//     return (\n//         <div style={{ width: 300 }}>\n//             <Autocomplete\n//                 freeSolo\n//                 onChange={(event, newValue) => newValue && Event(newValue)}\n//                 onSelect={(event) => event && Event(event)}\n//                 id=\"free-solo-2-demo\"\n//                 disableClearable\n//                 options={Datas && Datas.map((option) => option[Key])}\n//                 renderInput={(params) => (\n//                     <Grid container spacing={1} alignItems=\"flex-end\">\n//                         <Grid item>\n//                             <Icon />\n//                         </Grid>\n//                         <Grid item>\n//                             <TextField\n//                                 {...params}\n//                                 label={Label}\n//                                 error={false}\n//                                 // value={ville}\n//                                 // className=\"max-width\"\n//                                 name={Name}\n//                                 style={{ width: 215 }}\n//                                 InputProps={{ ...params.InputProps, type: 'search' }}\n//                             />\n//                         </Grid>\n//                     </Grid>\n//                 )}\n//             />\n//         </div>\n//     )\n// }\n//\n// export default InputAuto\n\n// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport axios from 'axios'\n\nfunction sleep (delay = 0) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, delay)\n    })\n}\n\nexport default function Asynchronous () {\n    const [open, setOpen] = React.useState(false)\n    const [options, setOptions] = React.useState([])\n    const loading = open && options.length === 0\n\n    React.useEffect(() => {\n        let active = true\n\n        if (!loading) {\n            return undefined\n        }\n\n        (async () => {\n            const response = await axios.get('https://country.register.gov.uk/records.json?page-size=5000')\n            await sleep(1e3) // For demo purposes.\n            const countries = await response.data\n\n            if (active) {\n                setOptions(Object.keys(countries).map((key) => countries[key].item[0]))\n            }\n        })()\n\n        return () => {\n            active = false\n        }\n    }, [loading])\n\n    React.useEffect(() => {\n        if (!open) {\n            setOptions([])\n        }\n    }, [open])\n\n    return (\n        <Autocomplete\n            id=\"asynchronous-demo\"\n            style={{ width: 300 }}\n            open={open}\n            onOpen={() => {\n                setOpen(true)\n            }}\n            onClose={() => {\n                setOpen(false)\n            }}\n            getOptionSelected={(option, value) => option.name === value.name}\n            getOptionLabel={(option) => option.name}\n            options={options}\n            loading={loading}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label=\"Asynchronous\"\n\n                    InputProps={{\n                        ...params.InputProps,\n                        endAdornment: (\n                            <React.Fragment>\n                                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                {params.InputProps.endAdornment}\n                            </React.Fragment>\n                        )\n                    }}\n                />\n            )}\n        />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}