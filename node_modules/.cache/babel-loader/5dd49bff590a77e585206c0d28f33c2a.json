{"ast":null,"code":"var _jsxFileName = \"/home/files/javascript/react/reactjs/tp/perle/src/components/clients/chat/Chat.jsx\";\nimport React, { Component } from 'react';\nimport Block from './layouts/block/Block';\nimport Header from './layouts/header/Header';\nimport './statics/styles/Chat.scss';\nimport Moment from 'react-moment';\nimport ChatInput from './layouts/chatInput/ChatInput';\nimport Notification from './layouts/notifications/Notification';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\n\nfunction HeaderType({\n  title,\n  date\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HeaderType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(Moment, {\n    format: \"dddd DD MMMM YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, date)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }));\n}\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNotification: false,\n      datas: [],\n      userContacter: null,\n      listUser: [],\n      userActif: {}\n    };\n    this.urlconv = '/api/get_messages';\n    this.socket = socketIOClient('https://evening-basin-72730.herokuapp.com/');\n  }\n\n  setListen() {\n    const {\n      userContacter,\n      userActif,\n      datas\n    } = this.state;\n\n    if (userActif.Information && userContacter) {\n      // couper tous le evenement ecoute\n      this.eventName = 'SendMessage_from' + userActif.Information.user_id + 'to' + userContacter.user_id;\n      console.log(this.eventName);\n      this.socket.on(this.eventName, data => {\n        console.log({\n          datas: [...datas, data]\n        });\n        this.setState(prevState => {\n          // Get previous state\n          const {\n            datas\n          } = prevState; // Add new item to array\n\n          datas.push(data); // Return new state\n\n          return {\n            datas\n          };\n        });\n      });\n    }\n  }\n\n  toogleShowNotification() {\n    this.setState({\n      showNotification: !this.state.showNotification\n    });\n  }\n\n  getUserConnect() {\n    console.log('getUserConnect');\n    const Authorization = 'Bearer ' + JSON.parse(localStorage.getItem('Token'));\n    axios.get('/api/profil', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization\n      }\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        userActif: data\n      });\n    }).catch(error => console.log({\n      error\n    }));\n  }\n\n  async componentDidMount() {\n    // this.setState({ datas: sms, listUser })\n    await this.getUserConnect();\n  }\n\n  getConvertion(userContacter) {\n    const {\n      userActif\n    } = this.state;\n    this.socket.removeListener(this.eventName);\n    console.log(userActif.Information, userContacter);\n\n    if (userActif.Information && userContacter) {\n      if (localStorage.hasOwnProperty('Token')) {\n        axios.post(this.urlconv, {\n          user_1: userActif.Information.user_id,\n          user_2: userContacter.user_id\n        }, {\n          headers: {\n            Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('Token'))\n          }\n        }).then(({\n          data\n        }) => {\n          this.setState({\n            datas: Object.entries(data).map(([key, values]) => values),\n            userContacter\n          }, () => this.setListen());\n        }).catch(error => console.log({\n          error\n        }));\n      } else {\n        console.log('Token not found');\n      }\n    }\n  }\n\n  sortData(datas, key) {\n    return datas.sort((a, b) => {\n      return b[key] - a[key];\n    });\n  }\n\n  onSubmit(value, jointe) {\n    const {\n      userContacter,\n      userActif\n    } = this.state;\n    const payload = {\n      user_1: userContacter.user_id,\n      user_2: userActif.Information.user_id,\n      message: value,\n      token: JSON.parse(localStorage.getItem('Token'))\n    };\n    console.log({\n      payload\n    });\n    this.socket.emit('recevePayload', payload);\n  }\n\n  findOne(data, key, search) {\n    return data.filter(e => {\n      return e[key] === search;\n    });\n  }\n\n  render() {\n    const Rencontre = () => /*#__PURE__*/React.createElement(HeaderType, {\n      title: \"LA RENCONTRE\",\n      date: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    });\n\n    const Decouvert = () => /*#__PURE__*/React.createElement(HeaderType, {\n      title: \"LA DECOUVERTE\",\n      date: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    });\n\n    const RendezVous = () => /*#__PURE__*/React.createElement(HeaderType, {\n      title: \"LE RENDEZ-VOUS\",\n      date: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 34\n      }\n    });\n\n    const {\n      showNotification,\n      datas,\n      userActif,\n      userContacter\n    } = this.state;\n    const dats = this.sortData(datas, 'id');\n    let init = 0;\n    let us = 0;\n    let one = false;\n    const lenDecouvert = 5;\n    const lenRendezVous = 6;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, showNotification && /*#__PURE__*/React.createElement(Notification, {\n      toogleShowNotification: this.toogleShowNotification.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      userContacter: this.getConvertion.bind(this),\n      userActif: userActif,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }), dats && dats.map((e, i) => {\n      one = false;\n\n      if (us !== e.utilisateurs_1_id) {\n        init = init + 1;\n        us = e.utilisateurs_1_id;\n\n        if ((init === lenDecouvert || init === lenRendezVous) && dats.length !== i + 1) {\n          one = true;\n        }\n      }\n\n      const urlImage = e.utilisateurs_1_id === userActif.Information.user_id ? userContacter.url : userActif.User.profil_image;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: e.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 36\n        }\n      }, i === 0 && /*#__PURE__*/React.createElement(Rencontre, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 46\n        }\n      }), /*#__PURE__*/React.createElement(Block, {\n        typeKey: false,\n        isLeft: e.utilisateurs_1_id === userActif.Information.user_id,\n        url: urlImage,\n        text: e.messages_contenue,\n        date: e.created_at,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 33\n        }\n      }), init === lenDecouvert && one && /*#__PURE__*/React.createElement(Decouvert, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 67\n        }\n      }), init === lenRendezVous && one && /*#__PURE__*/React.createElement(RendezVous, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 68\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ChatInput, {\n      onSubmit: this.onSubmit.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/files/javascript/react/reactjs/tp/perle/src/components/clients/chat/Chat.jsx"],"names":["React","Component","Block","Header","Moment","ChatInput","Notification","axios","socketIOClient","HeaderType","title","date","Chat","constructor","props","state","showNotification","datas","userContacter","listUser","userActif","urlconv","socket","setListen","Information","eventName","user_id","console","log","on","data","setState","prevState","push","toogleShowNotification","getUserConnect","Authorization","JSON","parse","localStorage","getItem","get","headers","then","catch","error","componentDidMount","getConvertion","removeListener","hasOwnProperty","post","user_1","user_2","Object","entries","map","key","values","sortData","sort","a","b","onSubmit","value","jointe","payload","message","token","emit","findOne","search","filter","e","render","Rencontre","Date","Decouvert","RendezVous","dats","init","us","one","lenDecouvert","lenRendezVous","bind","i","utilisateurs_1_id","length","urlImage","url","User","profil_image","id","messages_contenue","created_at"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Block from './layouts/block/Block'\nimport Header from './layouts/header/Header'\nimport './statics/styles/Chat.scss'\nimport Moment from 'react-moment'\nimport ChatInput from './layouts/chatInput/ChatInput'\nimport Notification from './layouts/notifications/Notification'\nimport axios from 'axios'\nimport socketIOClient from 'socket.io-client'\n\nfunction HeaderType ({ title, date }) {\n    return (\n        <div className='HeaderType'>\n            <div className='lineH'></div>\n            <div className='center'>\n                <h1>{ title }</h1>\n                <Moment format=\"dddd DD MMMM YYYY\">\n                    { date }\n                </Moment>\n            </div>\n            <div className='lineH'></div>\n        </div>\n    )\n}\n\nclass Chat extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            showNotification: false,\n            datas: [],\n            userContacter: null,\n            listUser: [],\n            userActif: {}\n        }\n        this.urlconv = '/api/get_messages'\n        this.socket = socketIOClient('https://evening-basin-72730.herokuapp.com/')\n    }\n\n    setListen () {\n        const { userContacter, userActif, datas } = this.state\n        if (userActif.Information && userContacter) {\n            // couper tous le evenement ecoute\n\n            this.eventName = 'SendMessage_from' + userActif.Information.user_id + 'to' + userContacter.user_id\n            console.log(this.eventName)\n            this.socket.on(this.eventName, (data) => {\n                console.log({ datas: [...datas, data] })\n                this.setState(prevState => {\n                    // Get previous state\n                    const { datas } = prevState\n\n                    // Add new item to array\n                    datas.push(data)\n\n                    // Return new state\n                    return { datas }\n                })\n            })\n        }\n    }\n\n    toogleShowNotification () {\n        this.setState({ showNotification: !this.state.showNotification })\n    }\n\n    getUserConnect () {\n        console.log('getUserConnect')\n        const Authorization = 'Bearer ' + JSON.parse(localStorage.getItem('Token'))\n        axios\n            .get('/api/profil', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization\n                }\n            })\n            .then(({ data }) => {\n                this.setState({ userActif: data })\n            })\n            .catch(error => console.log({ error }))\n    }\n\n    async componentDidMount () {\n        // this.setState({ datas: sms, listUser })\n        await this.getUserConnect()\n    }\n\n    getConvertion (userContacter) {\n        const { userActif } = this.state\n        this.socket.removeListener(this.eventName)\n        console.log(userActif.Information, userContacter)\n        if (userActif.Information && userContacter) {\n            if (localStorage.hasOwnProperty('Token')) {\n                axios.post(this.urlconv, {\n                    user_1: userActif.Information.user_id,\n                    user_2: userContacter.user_id\n                }, {\n                    headers: {\n                        Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('Token'))\n                    }\n                })\n                    .then(({ data }) => {\n                        this.setState({ datas: Object.entries(data).map(([key, values]) => values), userContacter }, () => this.setListen())\n                    })\n                    .catch(error => console.log({ error }))\n            } else {\n                console.log('Token not found')\n            }\n        }\n    }\n\n    sortData (datas, key) {\n        return datas.sort((a, b) => {\n            return b[key] - a[key]\n        })\n    }\n\n    onSubmit (value, jointe) {\n        const { userContacter, userActif } = this.state\n        const payload = {\n            user_1: userContacter.user_id,\n            user_2: userActif.Information.user_id,\n            message: value,\n            token: JSON.parse(localStorage.getItem('Token'))\n        }\n        console.log({ payload })\n        this.socket.emit('recevePayload', payload)\n    }\n\n    findOne (data, key, search) {\n        return data.filter(e => {\n            return e[key] === search\n        })\n    }\n\n    render () {\n        const Rencontre = () => <HeaderType title='LA RENCONTRE' date={new Date()}/>\n        const Decouvert = () => <HeaderType title='LA DECOUVERTE' date={new Date()}/>\n        const RendezVous = () => <HeaderType title='LE RENDEZ-VOUS' date={new Date()}/>\n        const {\n            showNotification,\n            datas,\n            userActif,\n            userContacter\n        } = this.state\n        const dats = this.sortData(datas, 'id')\n\n        let init = 0\n        let us = 0\n        let one = false\n\n        const lenDecouvert = 5\n        const lenRendezVous = 6\n        return (\n            <div className='Chat'>\n                {\n                    showNotification && <Notification toogleShowNotification={this.toogleShowNotification.bind(this)}/>\n                }\n                <div className='container'>\n                    <Header userContacter={this.getConvertion.bind(this)} userActif={userActif} />\n                    {\n                        dats && dats.map((e, i) => {\n                            one = false\n                            if (us !== e.utilisateurs_1_id) {\n                                init = init + 1\n                                us = e.utilisateurs_1_id\n                                if ((init === lenDecouvert || init === lenRendezVous) && dats.length !== i + 1) {\n                                    one = true\n                                }\n                            }\n                            const urlImage = e.utilisateurs_1_id === userActif.Information.user_id ? userContacter.url : userActif.User.profil_image\n                            return <div key={e.id}>\n                                { i === 0 && <Rencontre/> }\n                                <Block\n                                    typeKey={false}\n                                    isLeft={e.utilisateurs_1_id === userActif.Information.user_id}\n                                    url={urlImage}\n                                    text={e.messages_contenue}\n                                    date={e.created_at}\n                                />\n                                { init === lenDecouvert && one && <Decouvert/> }\n                                { init === lenRendezVous && one && <RendezVous/> }\n                            </div>\n                        })\n                    }\n                    <ChatInput onSubmit={this.onSubmit.bind(this)}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}