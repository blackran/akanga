{"ast":null,"code":"var _jsxFileName = \"/home/files/javascript/react/reactjs/tp/perle/src/components/clients/chat/Chat.jsx\";\nimport React, { Component } from 'react';\nimport Block from './layouts/block/Block';\nimport Header from './layouts/header/Header';\nimport './statics/styles/Chat.scss';\nimport Moment from 'react-moment';\nimport ChatInput from './layouts/chatInput/ChatInput';\nimport Notification from './layouts/notifications/Notification';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\n\nfunction HeaderType({\n  title,\n  date\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HeaderType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(Moment, {\n    format: \"dddd DD MMMM YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, date)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }));\n}\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNotification: false,\n      datas: [],\n      userContacter: null,\n      listUser: [],\n      userActif: {}\n    };\n    this.urlconv = '/api/get_messages';\n    this.socket = socketIOClient('https://evening-basin-72730.herokuapp.com/');\n  }\n\n  setListen() {\n    const {\n      userContacter,\n      userActif\n    } = this.state;\n    const eventName = 'SendMessage_from' + userActif.Information.id + 'to' + userContacter.user_id;\n\n    try {\n      this.socket.on(eventName, ({\n        data\n      }) => {\n        console.log(data);\n        this.setState(prevState => {\n          return {\n            datas: data\n          };\n        });\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  toogleShowNotification() {\n    this.setState({\n      showNotification: !this.state.showNotification\n    });\n  }\n\n  getUserConnect() {\n    const Authorization = 'Bearer ' + JSON.parse(localStorage.getItem('Token'));\n    axios.get('/api/profil', {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: Authorization\n      }\n    }).then(({\n      data\n    }) => {\n      console.log(data);\n      this.setState({\n        userActif: data\n      });\n    }).catch(error => console.log({\n      error\n    }));\n  }\n\n  async componentDidMount() {\n    // this.setState({ datas: sms, listUser })\n    await this.getUserConnect();\n  }\n\n  getConvertion(userContacter) {\n    console.log({\n      userContacter\n    });\n    const {\n      userActif\n    } = this.state;\n    this.setState({\n      userContacter\n    });\n    console.log({\n      userActif,\n      userContacter\n    });\n\n    if (userActif.Information && userContacter.user_id) {\n      if (localStorage.hasOwnProperty('Token')) {\n        axios.post(this.urlconv, {\n          user_1: userActif.Information.user_id,\n          user_2: userContacter.user_id\n        }, {\n          headers: {\n            Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('Token'))\n          }\n        }).then(({\n          data\n        }) => {\n          console.log({\n            conversation: data\n          });\n          this.setState({\n            datas: data\n          });\n        }).catch(error => console.log({\n          error\n        }));\n      } else {\n        console.log('Token not found');\n      }\n    }\n  }\n\n  sortData(datas, key) {\n    return Object.entries(datas).map(([key, values]) => values).sort((a, b) => {\n      return a[key] - b[key];\n    });\n  }\n\n  onSubmit(value, jointe) {\n    console.log({\n      value,\n      jointe\n    });\n    const {\n      userContacter,\n      userActif\n    } = this.state; // const stock = {\n    //     utilisateurs_1_id: userContacter,\n    //     utilisateurs_2_id: userActif.user_id,\n    //     messages_contenue: value,\n    //     updated_at: '2010-10-29T11:30:03.000000Z',\n    //     created_at: '2010-10-29T11:30:03.000000Z',\n    //     id: 8\n    // }\n\n    const payload = {\n      user_1: userActif.Information.user_id,\n      user_2: userContacter,\n      message: value,\n      token: localStorage.getItem('Token')\n    };\n    this.socket.emit('recevePayload', payload); // this.setState({ datas: [...this.state.datas, stock] })\n  }\n\n  findOne(data, key, search) {\n    return data.filter(e => {\n      return e[key] === search;\n    });\n  }\n\n  render() {\n    const Rencontre = () => /*#__PURE__*/React.createElement(HeaderType, {\n      title: \"LA RENCONTRE\",\n      date: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    });\n\n    const Decouvert = () => /*#__PURE__*/React.createElement(HeaderType, {\n      title: \"LA DECOUVERTE\",\n      date: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    });\n\n    const RendezVous = () => /*#__PURE__*/React.createElement(HeaderType, {\n      title: \"LE RENDEZ-VOUS\",\n      date: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 34\n      }\n    });\n\n    const {\n      showNotification,\n      listUser,\n      datas,\n      userActif\n    } = this.state;\n    const dats = this.sortData(datas, 'id');\n    let init = 0;\n    let us = 0;\n    let one = false;\n    const lenDecouvert = 5;\n    const lenRendezVous = 6;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, showNotification && /*#__PURE__*/React.createElement(Notification, {\n      toogleShowNotification: this.toogleShowNotification.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      userContacter: this.getConvertion.bind(this),\n      userActif: userActif,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }), dats && dats.map((e, i) => {\n      one = false;\n\n      if (us !== e.utilisateurs_1_id) {\n        init = init + 1;\n        us = e.utilisateurs_1_id;\n\n        if ((init === lenDecouvert || init === lenRendezVous) && dats.length !== i + 1) {\n          one = true;\n        }\n      }\n\n      let urlImage = this.findOne(listUser, 'id', e.utilisateurs_2_id)[0];\n\n      if (urlImage) {\n        urlImage = urlImage.url;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 36\n        }\n      }, i === 0 && /*#__PURE__*/React.createElement(Rencontre, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 46\n        }\n      }), /*#__PURE__*/React.createElement(Block, {\n        typeKey: false,\n        isLeft: e.utilisateurs_1_id === userActif.Information.user_id,\n        url: urlImage,\n        text: e.messages_contenue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 33\n        }\n      }), init === lenDecouvert && one && /*#__PURE__*/React.createElement(Decouvert, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 67\n        }\n      }), init === lenRendezVous && one && /*#__PURE__*/React.createElement(RendezVous, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 68\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ChatInput, {\n      onSubmit: this.onSubmit.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/files/javascript/react/reactjs/tp/perle/src/components/clients/chat/Chat.jsx"],"names":["React","Component","Block","Header","Moment","ChatInput","Notification","axios","socketIOClient","HeaderType","title","date","Chat","constructor","props","state","showNotification","datas","userContacter","listUser","userActif","urlconv","socket","setListen","eventName","Information","id","user_id","on","data","console","log","setState","prevState","e","toogleShowNotification","getUserConnect","Authorization","JSON","parse","localStorage","getItem","get","headers","then","catch","error","componentDidMount","getConvertion","hasOwnProperty","post","user_1","user_2","conversation","sortData","key","Object","entries","map","values","sort","a","b","onSubmit","value","jointe","payload","message","token","emit","findOne","search","filter","render","Rencontre","Date","Decouvert","RendezVous","dats","init","us","one","lenDecouvert","lenRendezVous","bind","i","utilisateurs_1_id","length","urlImage","utilisateurs_2_id","url","messages_contenue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Block from './layouts/block/Block'\nimport Header from './layouts/header/Header'\nimport './statics/styles/Chat.scss'\nimport Moment from 'react-moment'\nimport ChatInput from './layouts/chatInput/ChatInput'\nimport Notification from './layouts/notifications/Notification'\nimport axios from 'axios'\nimport socketIOClient from 'socket.io-client'\n\nfunction HeaderType ({ title, date }) {\n    return (\n        <div className='HeaderType'>\n            <div className='lineH'></div>\n            <div className='center'>\n                <h1>{ title }</h1>\n                <Moment format=\"dddd DD MMMM YYYY\">\n                    { date }\n                </Moment>\n            </div>\n            <div className='lineH'></div>\n        </div>\n    )\n}\n\nclass Chat extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            showNotification: false,\n            datas: [],\n            userContacter: null,\n            listUser: [],\n            userActif: {}\n        }\n        this.urlconv = '/api/get_messages'\n        this.socket = socketIOClient('https://evening-basin-72730.herokuapp.com/')\n    }\n\n    setListen () {\n        const { userContacter, userActif } = this.state\n        const eventName = 'SendMessage_from' + userActif.Information.id + 'to' + userContacter.user_id\n\n        try {\n            this.socket.on(eventName, ({ data }) => {\n                console.log(data)\n                this.setState((prevState) => {\n                    return { datas: data }\n                })\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    toogleShowNotification () {\n        this.setState({ showNotification: !this.state.showNotification })\n    }\n\n    getUserConnect () {\n        const Authorization = 'Bearer ' + JSON.parse(localStorage.getItem('Token'))\n        axios\n            .get('/api/profil', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: Authorization\n                }\n            })\n            .then(({ data }) => {\n                console.log(data)\n                this.setState({ userActif: data })\n            })\n            .catch(error => console.log({ error }))\n    }\n\n    async componentDidMount () {\n        // this.setState({ datas: sms, listUser })\n        await this.getUserConnect()\n    }\n\n    getConvertion (userContacter) {\n        console.log({ userContacter })\n        const { userActif } = this.state\n        this.setState({ userContacter })\n        console.log({ userActif, userContacter })\n        if (userActif.Information && userContacter.user_id) {\n            if (localStorage.hasOwnProperty('Token')) {\n                axios.post(this.urlconv, {\n                    user_1: userActif.Information.user_id,\n                    user_2: userContacter.user_id\n                }, {\n                    headers: {\n                        Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('Token'))\n                    }\n                })\n                    .then(({ data }) => {\n                        console.log({ conversation: data })\n                        this.setState({ datas: data })\n                    })\n                    .catch(error => console.log({ error }))\n            } else {\n                console.log('Token not found')\n            }\n        }\n    }\n\n    sortData (datas, key) {\n        return Object.entries(datas).map(([key, values]) => values).sort((a, b) => {\n            return a[key] - b[key]\n        })\n    }\n\n    onSubmit (value, jointe) {\n        console.log({ value, jointe })\n        const { userContacter, userActif } = this.state\n        // const stock = {\n        //     utilisateurs_1_id: userContacter,\n        //     utilisateurs_2_id: userActif.user_id,\n        //     messages_contenue: value,\n        //     updated_at: '2010-10-29T11:30:03.000000Z',\n        //     created_at: '2010-10-29T11:30:03.000000Z',\n        //     id: 8\n        // }\n        const payload = {\n            user_1: userActif.Information.user_id,\n            user_2: userContacter,\n            message: value,\n            token: localStorage.getItem('Token')\n        }\n        this.socket.emit('recevePayload', payload)\n\n        // this.setState({ datas: [...this.state.datas, stock] })\n    }\n\n    findOne (data, key, search) {\n        return data.filter(e => {\n            return e[key] === search\n        })\n    }\n\n    render () {\n        const Rencontre = () => <HeaderType title='LA RENCONTRE' date={new Date()}/>\n        const Decouvert = () => <HeaderType title='LA DECOUVERTE' date={new Date()}/>\n        const RendezVous = () => <HeaderType title='LE RENDEZ-VOUS' date={new Date()}/>\n        const {\n            showNotification,\n            listUser,\n            datas,\n            userActif\n        } = this.state\n        const dats = this.sortData(datas, 'id')\n\n        let init = 0\n        let us = 0\n        let one = false\n\n        const lenDecouvert = 5\n        const lenRendezVous = 6\n        return (\n            <div className='Chat'>\n                {\n                    showNotification && <Notification toogleShowNotification={this.toogleShowNotification.bind(this)}/>\n                }\n                <div className='container'>\n                    <Header userContacter={this.getConvertion.bind(this)} userActif={userActif} />\n                    {\n                        dats && dats.map((e, i) => {\n                            one = false\n                            if (us !== e.utilisateurs_1_id) {\n                                init = init + 1\n                                us = e.utilisateurs_1_id\n                                if ((init === lenDecouvert || init === lenRendezVous) && dats.length !== i + 1) {\n                                    one = true\n                                }\n                            }\n                            let urlImage = this.findOne(listUser, 'id', e.utilisateurs_2_id)[0]\n                            if (urlImage) {\n                                urlImage = urlImage.url\n                            }\n                            return <div key={i}>\n                                { i === 0 && <Rencontre/> }\n                                <Block\n                                    typeKey={false}\n                                    isLeft={e.utilisateurs_1_id === userActif.Information.user_id}\n                                    url={urlImage}\n                                    text={e.messages_contenue}\n                                />\n                                { init === lenDecouvert && one && <Decouvert/> }\n                                { init === lenRendezVous && one && <RendezVous/> }\n                            </div>\n                        })\n                    }\n                    <ChatInput onSubmit={this.onSubmit.bind(this)}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}