{"ast":null,"code":"import React from'react';import'./statics/Block.scss';function BarRegression(_ref){var value=_ref.value;if(parseInt(value)>100){return/*#__PURE__*/React.createElement(\"div\",{className:\"BarRegression\",style:{width:'100%'}});}if(parseInt(value)<0){return/*#__PURE__*/React.createElement(\"div\",{className:\"BarRegression\",style:{width:'0%'}});}return/*#__PURE__*/React.createElement(\"div\",{className:\"BarRegression\",style:{width:value+'%'}});}function Block(_ref2){var id=_ref2.id,title=_ref2.title,value=_ref2.value,onHover=_ref2.onHover,active=_ref2.active;return/*#__PURE__*/React.createElement(\"div\",{className:id===active?'Block active':'Block',onMouseEnter:function onMouseEnter(){return onHover(id);}},/*#__PURE__*/React.createElement(\"h1\",null,title),/*#__PURE__*/React.createElement(BarRegression,{value:value}));}export default Block;","map":{"version":3,"sources":["/home/files/hybride/akanga/src/components/principal/layouts/competences/layouts/block/Block.js"],"names":["React","BarRegression","value","parseInt","width","Block","id","title","onHover","active"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,sBAAP,CAEA,QAASC,CAAAA,aAAT,MAAmC,IAATC,CAAAA,KAAS,MAATA,KAAS,CACjC,GAAIC,QAAQ,CAACD,KAAD,CAAR,CAAkB,GAAtB,CAA2B,CACzB,mBAAO,2BAAK,SAAS,CAAC,eAAf,CAA+B,KAAK,CAAE,CAAEE,KAAK,CAAE,MAAT,CAAtC,EAAP,CACD,CAED,GAAID,QAAQ,CAACD,KAAD,CAAR,CAAkB,CAAtB,CAAyB,CACvB,mBAAO,2BAAK,SAAS,CAAC,eAAf,CAA+B,KAAK,CAAE,CAAEE,KAAK,CAAE,IAAT,CAAtC,EAAP,CACD,CAED,mBAAO,2BAAK,SAAS,CAAC,eAAf,CAA+B,KAAK,CAAE,CAAEA,KAAK,CAAEF,KAAK,CAAG,GAAjB,CAAtC,EAAP,CACD,CAED,QAASG,CAAAA,KAAT,OAAuD,IAArCC,CAAAA,EAAqC,OAArCA,EAAqC,CAAjCC,KAAiC,OAAjCA,KAAiC,CAA1BL,KAA0B,OAA1BA,KAA0B,CAAnBM,OAAmB,OAAnBA,OAAmB,CAAVC,MAAU,OAAVA,MAAU,CACrD,mBACE,2BACE,SAAS,CAAGH,EAAE,GAAKG,MAAP,CAAgB,cAAhB,CAAiC,OAD/C,CAEE,YAAY,CAAE,8BAAMD,CAAAA,OAAO,CAACF,EAAD,CAAb,EAFhB,eAIE,8BAAMC,KAAN,CAJF,cAKE,oBAAC,aAAD,CAAmB,CAAEL,KAAK,CAALA,KAAF,CAAnB,CALF,CADF,CASD,CAED,cAAeG,CAAAA,KAAf","sourcesContent":["import React from 'react'\nimport './statics/Block.scss'\n\nfunction BarRegression ({ value }) {\n  if (parseInt(value) > 100) {\n    return <div className=\"BarRegression\" style={{ width: '100%' }}></div>\n  }\n\n  if (parseInt(value) < 0) {\n    return <div className=\"BarRegression\" style={{ width: '0%' }}></div>\n  }\n\n  return <div className=\"BarRegression\" style={{ width: value + '%' }}></div>\n}\n\nfunction Block ({ id, title, value, onHover, active }) {\n  return (\n    <div\n      className={ id === active ? 'Block active' : 'Block' }\n      onMouseEnter={() => onHover(id)}\n    >\n      <h1>{ title }</h1>\n      <BarRegression {...{ value }} />\n    </div>\n  )\n}\n\nexport default Block\n"]},"metadata":{},"sourceType":"module"}