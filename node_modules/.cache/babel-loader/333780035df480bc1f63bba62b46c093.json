{"ast":null,"code":"var _jsxFileName = \"/home/files/hybride/martino/src/components/clients/principal/layouts/popup/Popup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }));\n});\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)'\n  },\n  active: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#784af4'\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18\n  }\n});\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, completed ? /*#__PURE__*/React.createElement(Check, {\n    className: classes.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 68\n    }\n  }));\n}\n\nQontoStepIcon.propTypes = {\n  /**\n  * Whether this step is active.\n  */\n  active: PropTypes.bool,\n\n  /**\n  * Mark the step as completed. Is passed to child components.\n  */\n  completed: PropTypes.bool\n};\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/React.createElement(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 12\n      }\n    }),\n    2: /*#__PURE__*/React.createElement(GroupAddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 12\n      }\n    }),\n    3: /*#__PURE__*/React.createElement(VideoLabelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 12\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, icons[String(props.icon)]);\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n  * Whether this step is active.\n  */\n  active: PropTypes.bool,\n\n  /**\n  * Mark the step as completed. Is passed to child components.\n  */\n  completed: PropTypes.bool,\n\n  /**\n  * The label displayed in the step icon.\n  */\n  icon: PropTypes.node\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n\n    case 1:\n      return 'What is an ad group anyways?';\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport function CustomizedSteppers() {\n  const state = useState({});\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(1);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: /*#__PURE__*/React.createElement(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 74\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    StepIconComponent: ColorlibStepIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, label)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, \"Qui demande cette formation ?\"), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Pr\\xE9nom*\",\n    value: state.Prenom,\n    onChange: onChangeInput,\n    margin: \"normal\",\n    variant: \"outlined\",\n    name: \"Prenom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  })), activeStep === steps.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }, getStepContent(activeStep)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 29\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n}\nexport default function Popup() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, \"Demander un devis sur la formation Excel 2003 Niveau 1 : Initiation - D\\xE9butant - Les bases\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }, \"Demander un devis\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomizedSteppers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/files/hybride/martino/src/components/clients/principal/layouts/popup/Popup.js"],"names":["React","PropTypes","makeStyles","withStyles","clsx","Stepper","Step","StepLabel","Check","SettingsIcon","GroupAddIcon","VideoLabelIcon","StepConnector","Button","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Transition","forwardRef","props","ref","QontoConnector","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","useQontoStepIconStyles","root","color","display","height","alignItems","circle","width","backgroundColor","zIndex","fontSize","QontoStepIcon","classes","propTypes","bool","ColorlibConnector","backgroundImage","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","icons","String","icon","node","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","CustomizedSteppers","state","useState","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","Prenom","onChangeInput","length","Popup","open","setOpen","handleClickOpen","handleClose"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Check from '@material-ui/icons/Check'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport GroupAddIcon from '@material-ui/icons/GroupAdd'\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel'\nimport StepConnector from '@material-ui/core/StepConnector'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Slide from '@material-ui/core/Slide'\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nconst QontoConnector = withStyles({\n    alternativeLabel: {\n        top: 10,\n        left: 'calc(-50% + 16px)',\n        right: 'calc(50% + 16px)'\n    },\n    active: {\n        '& $line': {\n            borderColor: '#784af4'\n        }\n    },\n    completed: {\n        '& $line': {\n            borderColor: '#784af4'\n        }\n    },\n    line: {\n        borderColor: '#eaeaf0',\n        borderTopWidth: 3,\n        borderRadius: 1\n    }\n})(StepConnector)\n\nconst useQontoStepIconStyles = makeStyles({\n    root: {\n        color: '#eaeaf0',\n        display: 'flex',\n        height: 22,\n        alignItems: 'center'\n    },\n    active: {\n        color: '#784af4'\n    },\n    circle: {\n        width: 8,\n        height: 8,\n        borderRadius: '50%',\n        backgroundColor: 'currentColor'\n    },\n    completed: {\n        color: '#784af4',\n        zIndex: 1,\n        fontSize: 18\n    }\n})\n\nfunction QontoStepIcon (props) {\n    const classes = useQontoStepIconStyles()\n    const { active, completed } = props\n\n    return (\n        <div\n            className={clsx(classes.root, {\n                [classes.active]: active\n            })}\n        >\n            {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n        </div>\n    )\n}\n\nQontoStepIcon.propTypes = {\n    /**\n   * Whether this step is active.\n   */\n    active: PropTypes.bool,\n    /**\n   * Mark the step as completed. Is passed to child components.\n   */\n    completed: PropTypes.bool\n}\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n        top: 22\n    },\n    active: {\n        '& $line': {\n            backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n        }\n    },\n    completed: {\n        '& $line': {\n            backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n        }\n    },\n    line: {\n        height: 3,\n        border: 0,\n        backgroundColor: '#eaeaf0',\n        borderRadius: 1\n    }\n})(StepConnector)\n\nconst useColorlibStepIconStyles = makeStyles({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: '#fff',\n        width: 50,\n        height: 50,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    active: {\n        backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n    },\n    completed: {\n        backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\n    }\n})\n\nfunction ColorlibStepIcon (props) {\n    const classes = useColorlibStepIconStyles()\n    const { active, completed } = props\n\n    const icons = {\n        1: <SettingsIcon />,\n        2: <GroupAddIcon />,\n        3: <VideoLabelIcon />\n    }\n\n    return (\n        <div\n            className={clsx(classes.root, {\n                [classes.active]: active,\n                [classes.completed]: completed\n            })}\n        >\n            {icons[String(props.icon)]}\n        </div>\n    )\n}\n\nColorlibStepIcon.propTypes = {\n    /**\n   * Whether this step is active.\n   */\n    active: PropTypes.bool,\n    /**\n   * Mark the step as completed. Is passed to child components.\n   */\n    completed: PropTypes.bool,\n    /**\n   * The label displayed in the step icon.\n   */\n    icon: PropTypes.node\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%'\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}))\n\nfunction getSteps () {\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad']\n}\n\nfunction getStepContent (step) {\n    switch (step) {\n    case 0:\n        return 'Select campaign settings...'\n    case 1:\n        return 'What is an ad group anyways?'\n    case 2:\n        return 'This is the bit I really care about!'\n    default:\n        return 'Unknown step'\n    }\n}\n\nexport function CustomizedSteppers () {\n    const state = useState({\n\n    })\n    const classes = useStyles()\n    const [activeStep, setActiveStep] = React.useState(1)\n    const steps = getSteps()\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1)\n    }\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    }\n\n    const handleReset = () => {\n        setActiveStep(0)\n    }\n\n    return (\n        <div className={classes.root}>\n            {/* <Stepper alternativeLabel activeStep={activeStep}> */}\n            {/*     {steps.map((label) => ( */}\n            {/*         <Step key={label}> */}\n            {/*             <StepLabel>{label}</StepLabel> */}\n            {/*         </Step> */}\n            {/*     ))} */}\n            {/* </Stepper> */}\n            {/* <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />}> */}\n            {/*     {steps.map((label) => ( */}\n            {/*         <Step key={label}> */}\n            {/*             <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel> */}\n            {/*         </Step> */}\n            {/*     ))} */}\n            {/* </Stepper> */}\n            <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                <div>\n                    <h1>Qui demande cette formation ?</h1>\n                    <TextField\n                        label=\"Prénom*\"\n                        value={state.Prenom}\n                        onChange={onChangeInput}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name=\"Prenom\"\n                    />\n\n                </div>\n                {activeStep === steps.length ? (\n                    <div>\n                        <Typography className={classes.instructions}>\n                          All steps completed - you&apos;re finished\n                        </Typography>\n                        <Button onClick={handleReset} className={classes.button}>\n              Reset\n                        </Button>\n                    </div>\n                ) : (\n                    <div>\n                        <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                        <div>\n                            <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleNext}\n                                className={classes.button}\n                            >\n                                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default function Popup () {\n    const [open, setOpen] = React.useState(false)\n\n    const handleClickOpen = () => {\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Button color=\"primary\" onClick={handleClickOpen}>\n                Demander un devis sur la formation Excel 2003 Niveau 1 : Initiation - Débutant - Les bases\n            </Button>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <div>\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        Demander un devis\n                    </DialogTitle>\n                    <div>\n                    </div>\n                </div>\n                <DialogContent>\n                    <CustomizedSteppers/>\n                </DialogContent>\n            </Dialog>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}