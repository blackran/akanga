{"ast":null,"code":"var _jsxFileName = \"/home/files/javascript/react/reactjs/tp/perle/src/components/clients/authentification/layouts/suites/layouts/InputAuto/InputAuto.jsx\";\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { countries } from './ListContry';\nimport { Grid } from '@material-ui/core';\nimport { LocationOn } from '@material-ui/icons'; // ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined' ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397)) : isoCode;\n}\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18\n    }\n  }\n});\nexport default function CountrySelect() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"country-select-demo\",\n    style: {\n      width: 300\n    },\n    options: countries,\n    classes: {\n      option: classes.option\n    },\n    autoHighlight: true,\n    getOptionLabel: option => option.label,\n    renderOption: option => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, countryToFlag(option.code)), option.label, \" (\", option.code, \") +\", option.phone),\n    renderInput: params => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: 100\n      },\n      className: \"margin-tb-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(LocationOn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Je suis ne a\",\n      error: false // onChange={this.onChangeInput.bind(this)}\n      // className=\"max-width\"\n      ,\n      name: \"ville\",\n      style: {\n        width: 215\n      },\n      inputProps: { ...params.inputProps,\n        autoComplete: 'new-password' // disable autocomplete and autofill\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    })))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/files/javascript/react/reactjs/tp/perle/src/components/clients/authentification/layouts/suites/layouts/InputAuto/InputAuto.jsx"],"names":["React","TextField","Autocomplete","makeStyles","countries","Grid","LocationOn","countryToFlag","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","useStyles","option","fontSize","marginRight","CountrySelect","classes","width","label","code","phone","params","marginBottom","inputProps","autoComplete"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { countries } from './ListContry'\n\nimport {\n    Grid\n} from '@material-ui/core'\nimport {\n    LocationOn\n} from '@material-ui/icons'\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag (isoCode) {\n    return typeof String.fromCodePoint !== 'undefined'\n        ? isoCode\n            .toUpperCase()\n            .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n        : isoCode\n}\n\nconst useStyles = makeStyles({\n    option: {\n        fontSize: 15,\n        '& > span': {\n            marginRight: 10,\n            fontSize: 18\n        }\n    }\n})\n\nexport default function CountrySelect () {\n    const classes = useStyles()\n\n    return (\n        <Autocomplete\n            id=\"country-select-demo\"\n            style={{ width: 300 }}\n            options={countries}\n            classes={{\n                option: classes.option\n            }}\n            autoHighlight\n            getOptionLabel={(option) => option.label}\n            renderOption={(option) => (\n                <React.Fragment>\n                    <span>{countryToFlag(option.code)}</span>\n                    {option.label} ({option.code}) +{option.phone}\n                </React.Fragment>\n            )}\n            renderInput={(params) => (\n                <div style={{ marginBottom: 100 }} className=\"margin-tb-20\" >\n                    <li>\n                        <Grid container spacing={1} alignItems=\"flex-end\">\n                            <Grid item>\n                                <LocationOn />\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    {...params}\n                                    label=\"Je suis ne a\"\n                                    error={false}\n                                    // onChange={this.onChangeInput.bind(this)}\n                                    // className=\"max-width\"\n                                    name='ville'\n                                    style={{ width: 215 }}\n                                    inputProps={{\n                                        ...params.inputProps,\n                                        autoComplete: 'new-password' // disable autocomplete and autofill\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </li>\n                </div>\n\n            )}\n        />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}