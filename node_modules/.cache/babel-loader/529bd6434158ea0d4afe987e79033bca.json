{"ast":null,"code":"var _jsxFileName = \"/home/files/hybride/martino/src/components/clients/principal/layouts/popup/Popup.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport './statics/css/Popup.scss';\nimport Contacts from './layouts/contacts/Contacts';\nimport Positions from './layouts/positions/Positions';\nimport Factures from './layouts/factures/Factures';\nimport { useSelector } from 'react-redux';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }));\n});\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#784af4'\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18\n  }\n});\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, completed ? /*#__PURE__*/React.createElement(Check, {\n    className: classes.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 26\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 68\n    }\n  }));\n}\n\nQontoStepIcon.propTypes = {\n  /**\n  * Whether this step is active.\n  */\n  active: PropTypes.bool,\n\n  /**\n  * Mark the step as completed. Is passed to child components.\n  */\n  completed: PropTypes.bool\n};\nconst activeColor = '#3f51b5';\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundColor: activeColor\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundColor: activeColor\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundColor: activeColor,\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundColor: activeColor\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/React.createElement(GroupAddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 12\n      }\n    }),\n    2: /*#__PURE__*/React.createElement(LocationOnIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 12\n      }\n    }),\n    3: /*#__PURE__*/React.createElement(DescriptionIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, icons[String(props.icon)]);\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n  * Whether this step is active.\n  */\n  active: PropTypes.bool,\n\n  /**\n  * Mark the step as completed. Is passed to child components.\n  */\n  completed: PropTypes.bool,\n\n  /**\n  * The label displayed in the step icon.\n  */\n  icon: PropTypes.node\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Contact', 'CoordonnÃ©s', 'Facturation'];\n}\n\nexport function CustomizedSteppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const stateContacts = useSelector(state => state.Contacts);\n  const statePositions = useSelector(state => state.Positions);\n  const stateFacturations = useSelector(state => state.Facturations);\n  const [requiredContacts, setReqiredContacts] = useState(false);\n  const [requiredPositions, setReqiredPositions] = useState(false);\n  const [requiredFactures, setReqiredFactures] = useState(false);\n\n  const verifyContact = state => {\n    const {\n      Prenom,\n      Nom,\n      Email,\n      Tel\n    } = state;\n    setReqiredContacts(false);\n\n    if (Prenom && Nom && Email && Tel) {\n      setReqiredContacts(true);\n    }\n  };\n\n  const verifyPositions = state => {\n    const {\n      Prenom,\n      Nom,\n      Entreprise,\n      Ville,\n      CodePostal,\n      Adresse,\n      Pays\n    } = state;\n    setReqiredPositions(false);\n\n    if (Prenom && Nom && Entreprise && Ville && CodePostal && Adresse && Pays) {\n      setReqiredPositions(true);\n    }\n  };\n\n  const verifyFactures = state => {\n    const {\n      Nom,\n      Entreprise,\n      Ville,\n      CodePostal,\n      Adresse,\n      Pays\n    } = state;\n    setReqiredFactures(false);\n\n    if ((Nom || Entreprise) && Ville && CodePostal && Adresse && Pays) {\n      setReqiredFactures(true);\n    }\n  };\n\n  useEffect(() => {\n    verifyContact(stateContacts);\n    verifyPositions(statePositions);\n    verifyFactures(stateFacturations);\n  }, [stateContacts, stateFacturations, statePositions]);\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: /*#__PURE__*/React.createElement(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    StepIconComponent: ColorlibStepIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }, label)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TextFieldPopup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, activeStep === 2 && /*#__PURE__*/React.createElement(Factures, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 45\n    }\n  }), activeStep === 1 && /*#__PURE__*/React.createElement(Positions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 45\n    }\n  }), activeStep === 0 && /*#__PURE__*/React.createElement(Contacts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottomButtonPopup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, activeStep !== 0 && /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  }, \"Retour\"), activeStep === steps.length - 1 ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleReset,\n    className: classes.button,\n    disabled: !requiredFactures,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, \"G\\xE9n\\xE9rer mon devis\") : activeStep === steps.length - 2 ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    disabled: !requiredPositions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 39\n    }\n  }, \"Envoyer mon devis\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    disabled: !requiredContacts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 39\n    }\n  }, \"Envoyer\")))));\n}\nexport default function Popup() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, \"Demander un devis sur la formation Excel 2003 Niveau 1 : Initiation - D\\xE9butant - Les bases\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerPopup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }, \"Demander un devis\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"closePopup\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomizedSteppers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/files/hybride/martino/src/components/clients/principal/layouts/popup/Popup.js"],"names":["React","useEffect","useState","PropTypes","makeStyles","withStyles","clsx","Stepper","Step","StepLabel","Check","LocationOnIcon","CloseIcon","GroupAddIcon","DescriptionIcon","StepConnector","Button","Dialog","DialogContent","DialogTitle","Slide","Contacts","Positions","Factures","useSelector","Transition","forwardRef","props","ref","useQontoStepIconStyles","root","color","display","height","alignItems","active","circle","width","borderRadius","backgroundColor","completed","zIndex","fontSize","QontoStepIcon","classes","propTypes","bool","activeColor","ColorlibConnector","alternativeLabel","top","line","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","icons","String","icon","node","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","CustomizedSteppers","activeStep","setActiveStep","steps","stateContacts","state","statePositions","stateFacturations","Facturations","requiredContacts","setReqiredContacts","requiredPositions","setReqiredPositions","requiredFactures","setReqiredFactures","verifyContact","Prenom","Nom","Email","Tel","verifyPositions","Entreprise","Ville","CodePostal","Adresse","Pays","verifyFactures","handleNext","prevActiveStep","handleBack","handleReset","map","label","length","Popup","open","setOpen","handleClickOpen","handleClose"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Check from '@material-ui/icons/Check'\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\nimport CloseIcon from '@material-ui/icons/Close'\nimport GroupAddIcon from '@material-ui/icons/GroupAdd'\nimport DescriptionIcon from '@material-ui/icons/Description'\nimport StepConnector from '@material-ui/core/StepConnector'\nimport Button from '@material-ui/core/Button'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Slide from '@material-ui/core/Slide'\nimport './statics/css/Popup.scss'\n\nimport Contacts from './layouts/contacts/Contacts'\nimport Positions from './layouts/positions/Positions'\nimport Factures from './layouts/factures/Factures'\nimport { useSelector } from 'react-redux'\n\nconst Transition = React.forwardRef(function Transition (props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nconst useQontoStepIconStyles = makeStyles({\n    root: {\n        color: '#eaeaf0',\n        display: 'flex',\n        height: 22,\n        alignItems: 'center'\n    },\n    active: {\n        color: '#784af4'\n    },\n    circle: {\n        width: 8,\n        height: 8,\n        borderRadius: '50%',\n        backgroundColor: 'currentColor'\n    },\n    completed: {\n        color: '#784af4',\n        zIndex: 1,\n        fontSize: 18\n    }\n})\n\nfunction QontoStepIcon (props) {\n    const classes = useQontoStepIconStyles()\n    const { active, completed } = props\n\n    return (\n        <div\n            className={clsx(classes.root, {\n                [classes.active]: active\n            })}\n        >\n            {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n        </div>\n    )\n}\n\nQontoStepIcon.propTypes = {\n    /**\n   * Whether this step is active.\n   */\n    active: PropTypes.bool,\n    /**\n   * Mark the step as completed. Is passed to child components.\n   */\n    completed: PropTypes.bool\n}\n\nconst activeColor = '#3f51b5'\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n        top: 22\n    },\n    active: {\n        '& $line': {\n            backgroundColor: activeColor\n        }\n    },\n    completed: {\n        '& $line': {\n            backgroundColor: activeColor\n        }\n    },\n    line: {\n        height: 3,\n        border: 0,\n        backgroundColor: '#eaeaf0',\n        borderRadius: 1\n    }\n})(StepConnector)\n\nconst useColorlibStepIconStyles = makeStyles({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: '#fff',\n        width: 50,\n        height: 50,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    active: {\n        backgroundColor: activeColor,\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n    },\n    completed: {\n        backgroundColor: activeColor\n    }\n})\n\nfunction ColorlibStepIcon (props) {\n    const classes = useColorlibStepIconStyles()\n    const { active, completed } = props\n\n    const icons = {\n        1: <GroupAddIcon />,\n        2: <LocationOnIcon />,\n        3: <DescriptionIcon />\n    }\n\n    return (\n        <div\n            className={clsx(classes.root, {\n                [classes.active]: active,\n                [classes.completed]: completed\n            })}\n        >\n            {icons[String(props.icon)]}\n        </div>\n    )\n}\n\nColorlibStepIcon.propTypes = {\n    /**\n   * Whether this step is active.\n   */\n    active: PropTypes.bool,\n    /**\n   * Mark the step as completed. Is passed to child components.\n   */\n    completed: PropTypes.bool,\n    /**\n   * The label displayed in the step icon.\n   */\n    icon: PropTypes.node\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%'\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}))\n\nfunction getSteps () {\n    return ['Contact', 'CoordonnÃ©s', 'Facturation']\n}\n\nexport function CustomizedSteppers () {\n    const classes = useStyles()\n    const [activeStep, setActiveStep] = React.useState(0)\n    const steps = getSteps()\n    const stateContacts = useSelector(state => state.Contacts)\n    const statePositions = useSelector(state => state.Positions)\n    const stateFacturations = useSelector(state => state.Facturations)\n    const [requiredContacts, setReqiredContacts] = useState(false)\n    const [requiredPositions, setReqiredPositions] = useState(false)\n    const [requiredFactures, setReqiredFactures] = useState(false)\n\n    const verifyContact = (state) => {\n        const { Prenom, Nom, Email, Tel } = state\n        setReqiredContacts(false)\n        if (Prenom && Nom && Email && Tel) {\n            setReqiredContacts(true)\n        }\n    }\n\n    const verifyPositions = (state) => {\n        const { Prenom, Nom, Entreprise, Ville, CodePostal, Adresse, Pays } = state\n        setReqiredPositions(false)\n        if (Prenom && Nom && Entreprise && Ville && CodePostal && Adresse && Pays) {\n            setReqiredPositions(true)\n        }\n    }\n\n    const verifyFactures = (state) => {\n        const { Nom, Entreprise, Ville, CodePostal, Adresse, Pays } = state\n        setReqiredFactures(false)\n        if ( (Nom || Entreprise) && Ville && CodePostal && Adresse && Pays) {\n            setReqiredFactures(true)\n        }\n    }\n\n    useEffect(() => {\n        verifyContact(stateContacts)\n        verifyPositions(statePositions)\n        verifyFactures(stateFacturations)\n    }, [stateContacts, stateFacturations, statePositions])\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1)\n    }\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    }\n\n    const handleReset = () => {\n        setActiveStep(0)\n    }\n\n    return (\n        <div className={classes.root}>\n            <Stepper\n                alternativeLabel\n                activeStep={activeStep}\n                connector={<ColorlibConnector />}\n            >\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel\n                            StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                <div className='TextFieldPopup'>\n                    {\n                        activeStep === 2 && <Factures />\n                    }\n                    {\n                        activeStep === 1 && <Positions />\n                    }\n                    {\n                        activeStep === 0 && <Contacts />\n                    }\n\n                </div>\n                <div className='bottomButtonPopup'>\n                    <div>\n                        {\n                            activeStep !== 0 &&\n                                    <Button\n                                        onClick={handleBack}\n                                        className={classes.button}\n                                    >\n                                        Retour\n                                    </Button>\n                        }\n\n                        {\n                            activeStep === steps.length - 1 ? (\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleReset}\n                                    className={classes.button}\n                                    disabled={!requiredFactures}\n                                >\n                                    GÃ©nÃ©rer mon devis\n                                </Button>\n                            ) : (\n\n                                activeStep === steps.length - 2\n                                    ? <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                        disabled={!requiredPositions}\n                                    >\n                                            Envoyer mon devis\n                                    </Button>\n                                    : <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                        disabled={!requiredContacts}\n                                    >\n                                            Envoyer\n                                    </Button>\n\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default function Popup () {\n    const [open, setOpen] = React.useState(false)\n\n    const handleClickOpen = () => {\n        setOpen(true)\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    return (\n        <div className='Popup'>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Demander un devis sur la formation Excel 2003 Niveau 1 :\n                Initiation - DÃ©butant - Les bases\n            </Button>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <div className='headerPopup'>\n                    <div></div>\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        Demander un devis\n                    </DialogTitle>\n                    <div\n                        className='closePopup'\n                        onClick={handleClose}\n                    >\n                        <CloseIcon/>\n                    </div>\n                </div>\n                <DialogContent>\n                    <CustomizedSteppers/>\n                </DialogContent>\n            </Dialog>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}