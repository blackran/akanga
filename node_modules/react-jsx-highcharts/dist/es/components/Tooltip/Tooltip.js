import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { useEffect, memo } from 'react';
import PropTypes from 'prop-types';
import { attempt } from 'lodash-es';
import useChart from '../UseChart';
import useHighcharts from '../UseHighcharts';
import useModifiedProps from '../UseModifiedProps';
var Tooltip = /*#__PURE__*/memo(function (props) {
  var _props$enabled;

  // eslint-disable-next-line no-unused-vars
  var _props$children = props.children,
      children = _props$children === void 0 ? null : _props$children,
      restProps = _objectWithoutProperties(props, ["children"]);

  var chart = useChart();
  var Highcharts = useHighcharts();
  restProps.enabled = (_props$enabled = props.enabled) !== null && _props$enabled !== void 0 ? _props$enabled : true;
  useEffect(function () {
    updateTooltip(chart, _objectSpread(_objectSpread({}, Highcharts.defaultOptions && Highcharts.defaultOptions.tooltip), restProps));
    return function () {
      attempt(updateTooltip, chart, {
        enabled: false
      });
    };
  }, []);
  var modifiedProps = useModifiedProps(restProps);
  useEffect(function () {
    if (modifiedProps !== false) {
      updateTooltip(chart, modifiedProps);
    }
  });
  return null;
});

var updateTooltip = function updateTooltip(chart, config) {
  chart.update({
    tooltip: config
  });
};

Tooltip.displayName = 'Tooltip';
Tooltip.propTypes = {
  enabled: PropTypes.bool
};
export default Tooltip;